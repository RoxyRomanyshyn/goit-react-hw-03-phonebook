{"version":3,"sources":["components/style.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","setState","value","handleSubmit","preventDefault","check","nameChecking","alert","props","onAddContact","this","contacts","forEach","stateContact","toLowerCase","onSubmit","type","placeholder","onChange","Component","Filter","onHandleFilter","ContactListItem","itemName","itemNumber","onRemoveItem","onClick","ContactList","visibleContacts","onRemove","map","id","key","App","filter","addContact","contact","uuidv4","prevState","getVisibleTasks","includes","handleFilter","removeContact","contactId","prevContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","className","style","phonebook","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,2B,+LCITC,E,4MACjBC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAEZC,aAAe,SAAAC,GAAM,IAEbH,EACAG,EAAEC,OADFJ,KAEJ,EAAKK,SAAL,eACKL,EAAOG,EAAEC,OAAOE,S,EAczBC,aAAe,SAAAJ,GACXA,EAAEK,iBACF,IAAIC,GAAQ,EACR,EAAKC,eACLC,MAAM,GAAD,OAAI,EAAKD,eAAT,2BAELD,GAAQ,EAEPA,GACD,EAAKG,MAAMC,aAAa,EAAKd,MAAMC,KAAM,EAAKD,MAAME,S,6DAnB5C,IAAD,OACPQ,GAAQ,EAMZ,OALAK,KAAKF,MAAMG,SAASC,SAAQ,SAAAC,GACpBA,EAAajB,KAAKkB,gBAAkB,EAAKnB,MAAMC,KAAKkB,gBACpDT,EAAQ,EAAKV,MAAMC,SAGpBS,I,+BAiBP,OAAS,oCACL,0BACKU,SACDL,KAAKP,cAET,+BAEA,qCAFA,IAGe,2BAAOP,KAAO,OAC7BoB,KAAO,OACPC,YAAc,aACdC,SACIR,KAAKZ,eAPT,KAJA,IAaa,+BACb,uCADa,IAEI,2BAAOF,KAAO,SAC/BoB,KAAO,OACPC,YAAc,eACdC,SACIR,KAAKZ,eANI,KASb,4BACOkB,KAAO,UADd,iBAtBA,KADK,S,GAtCwBG,aCH1B,SAASC,EAAT,GAEX,IADAC,EACD,EADCA,eAGA,OAAS,oCAEL,sDAFK,IAG2B,2BAC1BzB,KAAO,SACboB,KAAO,OACPE,SACI,SAAAnB,GAAC,OAAIsB,EAAetB,MAPnB,KCJE,SAASuB,EAAT,GAIX,IAHAC,EAGD,EAHCA,SACAC,EAED,EAFCA,WACAC,EACD,EADCA,aAGA,OAAS,oCAEL,4BAEA,+BAEIF,EAFJ,KAIIC,EAJJ,KAFA,IAOQ,8BAER,4BACOR,KAAO,SACdU,QACID,GAHJ,cAXK,KCHE,SAASE,EAAT,GAGX,IAFAC,EAED,EAFCA,gBACAC,EACD,EADCA,SAGA,OAAS,oCACL,gCAEID,EAAgBE,KAAI,gBAChBlC,EADgB,EAChBA,KACAmC,EAFgB,EAEhBA,GACAlC,EAHgB,EAGhBA,OAHgB,OAIZ,kBAAEyB,EAAF,CAAkBU,IAClBD,EAEJR,SACI3B,EAEJ4B,WACI3B,EAEJ4B,aACI,kBAAMI,EAASE,SAhB3B,KADK,K,qBCEQE,E,4MACnBtC,MAAQ,CACNgB,SAAU,GACVuB,OAAQ,I,EAeVC,WAAa,SAACvC,EAAMC,GAClB,IAAMuC,EAAU,CACdL,GAAIM,eACJzC,OACAC,UAEF,EAAKI,UAAS,SAAAqC,GACZ,MAAO,CACL3B,SAAS,GAAD,mBAAM2B,EAAU3B,UAAhB,CAA0ByB,S,EAKxCG,gBAAkB,WAAO,IAAD,EAIlB,EAAK5C,MAFPgB,EAFoB,EAEpBA,SACAuB,EAHoB,EAGpBA,OAGF,OAAOvB,EAASuB,QAAO,SAAAE,GAAO,OAC5BA,EAAQxC,KAAKkB,cAAc0B,SAASN,EAAOpB,mB,EAI/C2B,aAAe,SAAA1C,GACb,EAAKE,SAAS,CACZiC,OAAQnC,EAAEC,OAAOE,S,EAGrBwC,cAAgB,SAAAC,GACd,EAAK1C,UAAS,SAAAqC,GACZ,MAAO,CACL3B,SAAU2B,EAAU3B,SAASuB,QAAO,qBAClCH,KACWY,U,kEA9CjB,IAAMC,EAAeC,aAAaC,QAAQ,YAE1CF,GAAgBlC,KAAKT,SAAS,CAC5BU,SAAUoC,KAAKC,MAAMJ,O,yCAGNK,EAAWX,GACxBA,EAAU3B,WAAaD,KAAKf,MAAMgB,UACpCkC,aAAaK,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKf,MAAMgB,a,+BA2C7D,IAAMiB,EAAkBlB,KAAK6B,kBAE7B,OAAS,6BAEL,2CAFK,IAGiB,yBAAKa,UAC3BC,IAAMC,WADgB,IAEpB,kBACJ,EADI,CACQ7C,aACVC,KAAKyB,WAETxB,SACED,KAAKf,MAAMgB,WAPa,KAHjB,IAaH,0CAbG,IAcc,kBACvBS,EADuB,CAChBC,eACLX,KAAK+B,eAhBE,IAkBN,kBACHd,EADG,CACSC,gBACVA,EAEFC,SACEnB,KAAKgC,gBAvBE,S,GA3DoBvB,aCNjCoC,IAASC,OAAQ,kBACf,EADe,MAEfC,SAASC,eAAe,W","file":"static/js/main.78860c3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"style_phonebook__PC-by\"};","import React, {\r\n    Component\r\n} from 'react';\r\n\r\n\r\nexport default class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    handleChange = e => {\r\n        const {\r\n            name\r\n        } = e.target\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    };\r\n\r\n    nameChecking() {\r\n        let check = false;\r\n        this.props.contacts.forEach(stateContact => {\r\n            if (stateContact.name.toLowerCase() === this.state.name.toLowerCase()) {\r\n                check = this.state.name;\r\n            }\r\n        })\r\n        return check\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        let check = true;\r\n        if (this.nameChecking()) {\r\n            alert(`${this.nameChecking ()} is already in contact`)\r\n        } else {\r\n            check = false\r\n        };\r\n        if (!check) {\r\n            this.props.onAddContact(this.state.name, this.state.number);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return ( < >\r\n            <\r\n            form onSubmit = {\r\n                this.handleSubmit\r\n            } >\r\n            <\r\n            label >\r\n            <\r\n            p > Name < /p> <input name = \"name\"\r\n            type = \"text\"\r\n            placeholder = \"Enter name\"\r\n            onChange = {\r\n                this.handleChange\r\n            }\r\n            /> </label > < label >\r\n            <\r\n            p > Number < /p> <input name = \"number\"\r\n            type = \"text\"\r\n            placeholder = \"Enter number\"\r\n            onChange = {\r\n                this.handleChange\r\n            }\r\n            /> </label >\r\n            <\r\n            button type = \"submit\" > Add contact < /button> </form > < />\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Filter({\r\n    onHandleFilter\r\n}) {\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        p > Find contacts by name < /p> <\r\n        input name = \"filter\"\r\n        type = \"text\"\r\n        onChange = {\r\n            e => onHandleFilter(e)\r\n        }\r\n        /> < / >\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function ContactListItem({\r\n    itemName,\r\n    itemNumber,\r\n    onRemoveItem\r\n}) {\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        li >\r\n        <\r\n        p > {\r\n            itemName\r\n        }: {\r\n            itemNumber\r\n        } < /p> <\r\n        span >\r\n        <\r\n        button type = \"button\"\r\n        onClick = {\r\n            onRemoveItem\r\n        } > Delete < /button></span >\r\n        <\r\n        /li> < / >\r\n    )\r\n}","import React, {\r\n    Component\r\n} from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem'\r\n\r\nexport default function ContactList({\r\n    visibleContacts,\r\n    onRemove\r\n}) {\r\n\r\n    return ( < >\r\n        <\r\n        ul > {\r\n            visibleContacts.map(({\r\n                name,\r\n                id,\r\n                number\r\n            }) => ( < ContactListItem key = {\r\n                    id\r\n                }\r\n                itemName = {\r\n                    name\r\n                }\r\n                itemNumber = {\r\n                    number\r\n                }\r\n                onRemoveItem = {\r\n                    () => onRemove(id)\r\n                }\r\n                />\r\n            ))\r\n        } < /ul> </ >\r\n    )\r\n}","import React, {\n  Component\n} from 'react';\nimport {\n  v4 as uuidv4\n} from 'uuid';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport style from './style.module.css'\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n  componentDidMount() {\n    const prevContacts = localStorage.getItem('contacts');\n\n    prevContacts && this.setState({\n      contacts: JSON.parse(prevContacts)\n    })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  getVisibleTasks = () => {\n    const {\n      contacts,\n      filter\n    } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  handleFilter = e => {\n    this.setState({\n      filter: e.target.value\n    });\n  }\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({\n          id\n        }) => id !== contactId),\n      };\n    });\n  };\n  render() {\n    const visibleContacts = this.getVisibleTasks();\n\n    return ( <\n        div >\n        <\n        h1 > Phonebook < /h1> <div className = {\n        style.phonebook\n      } > <\n      ContactForm onAddContact = {\n        this.addContact\n      }\n    contacts = {\n      this.state.contacts\n    }\n    / > < /\n    div > <\n      h2 > Contacts < /h2> <\n    Filter onHandleFilter = {\n      this.handleFilter\n    }\n    /> <\n    ContactList visibleContacts = {\n      visibleContacts\n    }\n    onRemove = {\n      this.removeContact\n    }\n    /> < /\n    div >\n  );\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render( <\n  App / > ,\n  document.getElementById('root')\n);"],"sourceRoot":""}